heat_template_version: "2018-08-31"
description: "Kubeadm Template utilizing the kubadm community image."

#https://docs.openstack.org/heat/stein/template_guide/software_deployment.html#signals-and-wait-conditions
#https://docs.openstack.org/heat/latest/template_guide/hot_spec.html
#https://docs.openstack.org/heat/stein/template_guide/openstack.html#OS::Neutron::LBaaS::LoadBalancer
#TODO Consider https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-join/#turning-off-auto-approval-of-node-client-certificates or include token/render in template
#TODO dump /etc/kubernetes/admin.conf

#Weirdest error award:
#worker login: [   26.221713] cloud-init[969]: Error: unknown shorthand flag: '��' in -���discovery-token-unsafe-skip-ca-verification  


parameters:
  cluster-cidr:
    label: Cluster CIDR
    description: Network range for your cluster. Must be at least a /16 for kubenet to assign each node a /24 to.
    default: "10.1.0.0/16"
    type: string
  endpoint:
    type: string
    label: Kubernetes API Endpoint
    description: The IP or DNS address (recommended) for the API endpoint of your cluster.
  master-size:
    type: number
    label: Number of master nodes (Only support 1 for now :)
    constraints:
    - modulo:
        step: 2
        offset: 1
    - range:
        min: 1
        max: 1
  master-flavor:
    type: string
    label: Flavor of masters
    constraints:
    - allowed_values:
      - m1.medium
      - m1.large
      - m1.xlarge
  worker-size:
    type: number
    label: Number of worker nodes
    constraints:
    - range:
        min: 1
  worker-flavor:
    type: string
    label: Flavor of workers
    constraints:
    - allowed_values:
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
  bootstrap-token:
    default: 07401b.f395accd246ae52d # Consider https://docs.openstack.org/heat/stein/template_guide/openstack.html#OS::Heat::RandomStringor allow for external joins
    label: Bootstrap Token
    description: The token used to join nodes together. Token lasts for 1 hour. 
    constraints:
    - allowed_pattern: "[a-z0-9]{6}\\.[a-z0-9]{16}"
      description: Bootstrap Tokens take the form of abcdef.0123456789abcdef. More formally, they must match the regular expression [a-z0-9]{6}\.[a-z0-9]{16}
    type: string
  certificate-key:
    label: Certificate Key
    description: Key used to encrypt the control-plane certificates in the kubeadm-certs Secret.
    default: e6a2eb8581237ab72a4f494f30285ec12a9694d750b9785706a83bfcbbbd2204
    type: string
  dns:
    label: Nameservers
    description: The nameservers used by instances on the network.
    default: "1.1.1.1,1.0.0.1"
    type: comma_delimited_list
  floating-ip-network:
    label: Floating IP Network
    description: The Floating IP Network ID to be used by the load balancer.
    type: string
  router-id:
    label: Router ID
    description: The router ID to be used by the cluster. Used by kubenet if the cluster is configured to do so.
    type: string
  os-auth-url:
    label: Openstack Identity Endpoint 
    description: The identity endpoint for openstack.
    type: string
  os-acid:
    label: Application Credential ID 
    description: The application credential ID to bse used by the cluster's cloud control manager and sub components
    type: string
    hidden: true
  os-acs:
    label: Application Credential Secret
    description: The application credential secret to bse used by the cluster's cloud control manager and sub components
    type: string
    hidden: true
  os-region:
    label: Region
    description: The region that this cluster should be placed in
    default: lax1
    type: string
    constraints:
    - allowed_values:
      - lax1
      - iad1
  subnet-name:
    label: Subnet Name
    description: The name of the subnet for your cluster.
    default: k8s-internal
    type: string
  image:
    label: HOT Image
    description: The base image to be used by the Heat Orchestration Template.
    default: HOT_Kubernetes-1.16.2-containerd-1.3.0-runc-1.0.0-rc9
    type: string
    constraints:
    - allowed_values:
      - "HOT_Kubernetes-1.16.2-containerd-1.3.0-runc-1.0.0-rc9"
  key-name:
    label: SSH Key
    description: The name of the SSH key to create
    default: workbench
    type: string
  endpoint-ip:
    type: string
    default: "10.1.0.11"
    description: The internal IP address that the endpoint resolves to. 
  


resources:
  #kms_plugin_secret:
    #type: OS::Barbican::Order
    #properties:
      #algorithm: aes
      #bit_length: 256
      #mode: cbc
      #name: k8s_key
      #payload_content_type: application/octet-stream
      #type: key
  
  sec_rules:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Ruleset for kubeadm. Generic.
      name: k8s-ruleset
      rules:
        - direction: ingress
          port_range_min: 6443
          port_range_max: 6443
          protocol: tcp
          remote_ip_prefix: "0.0.0.0/0"
          remote_mode: remote_ip_prefix
        - direction: ingress
          port_range_min: 30000
          port_range_max: 32767
          protocol: tcp
          remote_ip_prefix: "0.0.0.0/0"
          remote_mode: remote_ip_prefix
        - direction: egress
          port_range_min: 1
          port_range_max: 65535
          protocol: tcp
          remote_ip_prefix: "0.0.0.0/0"
          remote_mode: remote_ip_prefix
        - direction: egress
          port_range_min: 1
          port_range_max: 65535
          protocol: udp
          remote_ip_prefix: "0.0.0.0/0"
          remote_mode: remote_ip_prefix

  sec_rule_self_etcd:
    type: OS::Neutron::SecurityGroupRule
    properties:
      description: etcd
      direction: ingress
      port_range_min: 2379
      port_range_max: 2380
      protocol: tcp
      remote_group: { get_resource: sec_rules}
      security_group: { get_resource: sec_rules}
  
  sec_rule_self_controller:
    type: OS::Neutron::SecurityGroupRule
    properties:
      description: control plane
      direction: ingress
      port_range_min: 10250
      port_range_max: 10252
      protocol: tcp
      remote_group: { get_resource: sec_rules}
      security_group: { get_resource: sec_rules}
  
  sec_rule_self_allow_all_tcp:
    type: OS::Neutron::SecurityGroupRule
    properties:
      description: Allow all communication between self. TCP. Use PSP to isolate workloads.
      direction: ingress
      port_range_min: 1
      port_range_max: 65535
      protocol: tcp
      remote_group: { get_resource: sec_rules}
      security_group: { get_resource: sec_rules}
  sec_rule_self_allow_all_udp:
    type: OS::Neutron::SecurityGroupRule
    properties:
      description: Allow all communication between self. TCP. Use PSP to isolate workloads.
      direction: ingress
      port_range_min: 1
      port_range_max: 65535
      protocol: udp
      remote_group: { get_resource: sec_rules}
      security_group: { get_resource: sec_rules}



  k8s_net:
    type: OS::Neutron::Net

  k8s_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: k8s_net }
      cidr: { get_param: cluster-cidr }
      dns_nameservers: { get_param: dns }
      ip_version: 4
      name: { get_param: subnet-name }
  
  k8s_subnet_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_param: router-id }
      subnet: { get_resource: k8s_subnet }
        
  master_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 2
      timeout: 120
  
  wait_handle:
    type: OS::Heat::WaitConditionHandle
  
  as_worker:
    type: OS::Heat::AutoScalingGroup
    properties:
      desired_capacity: { get_param: worker-size }
      min_size: 1
      max_size: { get_param: worker-size }
      resource:
        type: "OS::Nova::Server"
        properties:
          security_groups: [{get_resource: sec_rules}]
          flavor: {get_param: worker-flavor}
          key_name: { get_param: key-name }
          block_device_mapping_v2:
          - image: { get_param: image }
            volume_size: 20
            delete_on_termination: true
          tags:
            - Kubernetes
            - worker
          availability_zone: nova
          flavor_update_policy: REPLACE
          image_update_policy: REPLACE
          user_data_format: RAW
          user_data:
            str_replace:
              template: {get_file: "https://raw.githubusercontent.com/sfxworks/kubernetes-on-openstack/dev/packer/k8s-base/join-worker.sh?ts=1572857381"}
              params:
                $BOOTSTRAP_TOKEN: { get_param: bootstrap-token }
                $ENDPOINT: { get_param: endpoint }
                $CLUSTER_CIDR: { get_param: cluster-cidr }
                $OS_AUTH_URL: { get_param: os-auth-url }
                $OS_APPLICATION_CREDENTIAL_ID: {get_param: os-acid}
                $OS_APPLICATION_CREDENTIAL_SECRET: { get_param: os-acs }
                $OS_REGION_NAME: { get_param: os-region }
                $LB_SUBNET_ID: { get_resource: k8s_subnet }
                $LB_FLOATING_NETWORK_ID: { get_param: floating-ip-network }
                $NET_PUBLIC: { get_param: subnet-name }
                $NET_INTERNAL: { get_param: subnet-name }
                $ROUTER_ID: { get_param: router-id }
          user_data_update_policy: REPLACE
          networks: 
            - network: { get_resource: k8s_net }
    depends_on: 
      - master_node
      - master_condition
  
  master_instance_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: k8s_net }
      security_groups: [{ get_resource: sec_rules }]
      fixed_ips:
      - subnet: { get_resource: k8s_subnet }
        ip_address: { get_param: endpoint-ip}

  master_node: 
    type: "OS::Nova::Server"
    properties: 
      networks: 
        - port: { get_resource: master_instance_port }
      name: "master-1"
      flavor: { get_param: master-flavor }
      block_device_mapping_v2:
      - image: { get_param: image }
        volume_size: 20
        delete_on_termination: false
      availability_zone: nova
      key_name: { get_param: key-name }
      image_update_policy: REPLACE
      user_data_update_policy: IGNORE
      user_data_format: RAW
      tags:
        - Kubernetes
        - master
      user_data:
        str_replace:
          template: {get_file: "https://raw.githubusercontent.com/sfxworks/kubernetes-on-openstack/dev/packer/k8s-base/init-master.sh?ts=1572857381" }
          params:
            wc_notify: { get_attr: [wait_handle, curl_cli] }
            $BOOTSTRAP_TOKEN: { get_param: bootstrap-token }
            $CERTIFICATE_KEY: { get_param: certificate-key }
            $ENDPOINT: { get_param: endpoint }
            $CLUSTER_CIDR: { get_param: cluster-cidr }
            $OS_AUTH_URL: { get_param: os-auth-url }
            $OS_APPLICATION_CREDENTIAL_ID: {get_param: os-acid}
            $OS_APPLICATION_CREDENTIAL_SECRET: { get_param: os-acs }
            $OS_REGION_NAME: { get_param: os-region }
            $LB_SUBNET_ID: { get_resource: k8s_subnet }
            $LB_FLOATING_NETWORK_ID: { get_param: floating-ip-network }
            $NET_PUBLIC: { get_param: subnet-name }
            $NET_INTERNAL: { get_param: subnet-name }
            $ROUTER_ID: { get_param: router-id }
            #$KMS_KEY_ID: {str_split: [ '/', { get_resource: ['kms_plugin_secret', 'secret_ref']}, 5]}
            
  etcd_bucket: 
    type: "OS::Swift::Container"
    properties: 
      PurgeOnDelete: true
      name: "k8s-etcd-backup"

  
  

outputs:
  wc_kube_config:
    value: { get_attr: [master_condition, data] }